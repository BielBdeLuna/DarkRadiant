<?xml version="1.0" encoding="UTF-8"?>
<!--

 Author: greebo (greebo a/t angua.at)
 Copyright (C) 2009 greebo

 This library is free software; you can redistribute it and/or
 modify it under the terms of the GNU Library General Public
 License as published by the Free Software Foundation; either
 version 2 of the License, or (at your option) any later version.

 This library is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 Library General Public License for more details.

 You should have received a copy of the GNU Library General Public
 License along with this library; if not, write to the
 Free Software Foundation, Inc., 59 Temple Place - Suite 330,
 Boston, MA 02111-1307, USA.

-->
<language id="d3material" _name="Doom 3 Material" version="2.0" _section="Others">
  <metadata>
    <property name="globs">*.mtr</property>
    <property name="line-comment-start">//</property>
    <property name="block-comment-start">/*</property>
    <property name="block-comment-end">*/</property>
  </metadata>

  <styles>
    <style id="module-handler"    _name="Module Handler"        map-to="def:preprocessor"/>
    <style id="keyword"           _name="Keyword"               map-to="def:keyword"/>
    <style id="multiline-string"  _name="Multiline string"      map-to="def:string"/>
    <style id="string"            _name="String"                map-to="def:string"/>
    <style id="escaped-char"      _name="Escaped Character"     map-to="def:special-char"/>
    <style id="format"            _name="Format"                map-to="def:character"/>
    <style id="string-conversion" _name="string-conversion"/>
    <style id="special-variable"  _name="Special Variable"      map-to="def:identifier"/>
    <style id="boolean"           _name="Boolean"               map-to="def:boolean"/>
    <style id="floating-point"    _name="Floating point number" map-to="def:floating-point"/>
    <style id="decimal"           _name="Decimal number"        map-to="def:decimal"/>
    <style id="base-n-integer"    _name="Base-N number"         map-to="def:base-n-integer"/>
    <style id="complex"           _name="Complex number"        map-to="def:complex"/>
    <style id="builtin-constant"  _name="Builtin Constant"      map-to="def:special-constant"/>
    <style id="builtin-object"    _name="Builtin Object"        map-to="def:type"/>
    <style id="builtin-function"  _name="Builtin Function"      map-to="def:builtin"/>
	<style id="comment"           _name="Comment"               map-to="def:comment"/>
  </styles>

  <default-regex-options case-sensitive="false" />

  <definitions>
    <define-regex id="identifier">[_a-zA-Z][_a-zA-Z0-9]*</define-regex>
    <define-regex id="number">[1-9][0-9]*</define-regex>

    <!-- http://docs.python.org/lib/typesseq-strings.html -->
    <context id="format" style-ref="format" extend-parent="false">
      <match extended="true">
        %                       # leading % sign
        \(\%{identifier}\)?     # mapping key
        [#0\-\ \+]*             # conversion flags
        (\-?\%{number}|\*)?     # minimum field width
        (\.(\-?\%{number}|\*))? # precision
        (hlL)?                  # lentgh modifier
        [diouxXeEfFgGcrs%]      # conversion type
      </match>
    </context>

    <!-- http://docs.python.org/ref/strings.html -->
    <context id="escaped-char" style-ref="escaped-char" extend-parent="true">
      <match extended="true">
        \\(                 # leading backslash
        [\\'"abfnrtv]     | # single escaped char
        N\{[A-Z\ ]+\}     | # named unicode character
        u[0-9A-Fa-f]{4}   | # xxxx - character with 16-bit hex value xxxx
        U[0-9A-Fa-f]{8}   | # xxxxxxxx - character with 32-bit hex value xxxxxxxx
        x[0-9A-Fa-f]{1,2} | # \xhh - character with hex value hh
        [0-7]{1,3}          # \ooo - character with octal value ooo
        )
      </match>
    </context>

    <define-regex id="string-prefix">(u|U)?</define-regex>
    <define-regex id="raw-string-prefix">(r|ur|R|UR|Ur|uR)</define-regex>

    <context id="multiline-double-quoted-string" style-ref="multiline-string">
      <start>\%{string-prefix}"""</start>
      <end>"""</end>
      <include>
        <context ref="format"/>
        <context ref="escaped-char"/>
      </include>
    </context>

    <context id="multiline-single-quoted-string" style-ref="multiline-string">
      <start>\%{string-prefix}'''</start>
      <end>'''</end>
      <include>
        <context ref="format"/>
        <context ref="escaped-char"/>
      </include>
    </context>

    <context id="double-quoted-string" style-ref="string" end-at-line-end="true">
      <start>\%{string-prefix}"</start>
      <end>"</end>
      <include>
        <context ref="format"/>
        <context ref="escaped-char"/>
        <context ref="def:line-continue"/>
      </include>
    </context>

    <context id="single-quoted-string" style-ref="string" end-at-line-end="true">
      <start>\%{string-prefix}'</start>
      <end>'</end>
      <include>
        <context ref="format"/>
        <context ref="escaped-char"/>
        <context ref="def:line-continue"/>
      </include>
    </context>

    <context id="multiline-double-quoted-raw-string" style-ref="multiline-string">
      <start>\%{raw-string-prefix}"""</start>
      <end>"""</end>
      <include>
        <context ref="format"/>
      </include>
    </context>

    <context id="multiline-single-quoted-raw-string" style-ref="multiline-string">
      <start>\%{raw-string-prefix}'''</start>
      <end>'''</end>
      <include>
        <context ref="format"/>
      </include>
    </context>

    <context id="double-quoted-raw-string" style-ref="string" end-at-line-end="true">
      <start>\%{raw-string-prefix}"</start>
      <end>"</end>
      <include>
        <context ref="format"/>
        <context ref="def:line-continue"/>
      </include>
    </context>

    <context id="single-quoted-raw-string" style-ref="string" end-at-line-end="true">
      <start>\%{raw-string-prefix}'</start>
      <end>'</end>
      <include>
        <context ref="format"/>
        <context ref="def:line-continue"/>
      </include>
    </context>

    <context id="d3material">
      <include>
        <context ref="def:shebang"/>
        <context ref="def:shell-like-comment"/>

        <context ref="multiline-double-quoted-string"/>
        <context ref="multiline-single-quoted-string"/>
        <context ref="double-quoted-string"/>
        <context ref="single-quoted-string"/>

        <context ref="multiline-double-quoted-raw-string"/>
        <context ref="multiline-single-quoted-raw-string"/>
        <context ref="double-quoted-raw-string"/>
        <context ref="single-quoted-raw-string"/>

		<!-- Comments -->
		<context id="comment" style-ref="comment" end-at-line-end="true">
			<start>//</start>
			<include>
			  <context ref="def:in-line-comment"/>
			</include>
		</context>

		<context id="comment-multiline" style-ref="comment">
			<start>/\*</start>
			<end>\*/</end>
			<include>
				<context ref="def:in-comment"/>
			</include>
		</context>

        <context id="string-conversion" style-ref="string-conversion" end-at-line-end="true">
          <start>`</start>
          <end>`</end>
          <include>
            <context ref="d3material"/>
          </include>
        </context>

        <context id="special-variables" style-ref="special-variable">
          <prefix>(?&lt;![\w\.])</prefix>
          <keyword>parm0</keyword>
		  <keyword>parm1</keyword>
          <keyword>parm2</keyword>
          <keyword>parm3</keyword>
		  <keyword>parm4</keyword>
          <keyword>parm5</keyword>
          <keyword>parm6</keyword>
		  <keyword>parm7</keyword>
          <keyword>parm8</keyword>
          <keyword>parm9</keyword>
		  <keyword>parm10</keyword>
          <keyword>parm11</keyword>
		  <keyword>global0</keyword>
		  <keyword>global1</keyword>
          <keyword>global2</keyword>
          <keyword>global3</keyword>
		  <keyword>global4</keyword>
          <keyword>global5</keyword>
          <keyword>global6</keyword>
		  <keyword>global7</keyword>
        </context>

        <context id="boolean" style-ref="boolean">
          <prefix>(?&lt;![\w\.])</prefix>
          <keyword>False</keyword>
          <keyword>True</keyword>
        </context>

        <define-regex id="float" extended="true">
          ( (\d+)?\.\d+ | \d+\. ) |
          ( (\d+|(\d+)?\.\d+|\d+\.)[eE][+-]?\d+ )
        </define-regex>

        <context id="complex" style-ref="complex">
          <match>(?&lt;![\w\.])(\%{float}|\d+)[jJ]\b</match>
        </context>

        <context id="float" style-ref="floating-point">
          <match>(?&lt;![\w\.])\%{float}(?![\w\.])</match>
        </context>

        <context id="decimal" style-ref="decimal">
          <match>(?&lt;![\w\.])([1-9][0-9]*|0)[lL]?(?![\w\.])</match>
        </context>

        <context id="octal" style-ref="base-n-integer">
          <match>(?&lt;![\w\.])0[0-7]+[lL]?(?![\w\.])</match>
        </context>

        <context id="hex" style-ref="base-n-integer">
          <match>(?&lt;![\w\.])0[xX][0-9A-Fa-f]+[lL]?(?![\w\.])</match>
        </context>

        <context id="module-handler" style-ref="module-handler">
          <keyword>import</keyword>
          <keyword>from</keyword>
          <keyword>as</keyword>
        </context>

        <context id="keyword" style-ref="keyword">
          <keyword>diffusemap</keyword>
          <keyword>qer_editorimage</keyword>
          <keyword>bumpmap</keyword>
          <keyword>specularmap</keyword>
          <keyword>map</keyword>
          <keyword>if</keyword>
		  <keyword>description</keyword>
		  <keyword>polygonOffset</keyword>
		  <keyword>noshadows</keyword>
		  <keyword>noselfshadow</keyword>
		  <keyword>forceshadows</keyword>
		  <keyword>nooverlays</keyword>
		  <keyword>forceoverlays</keyword>
		  <keyword>translucent</keyword>
		  <keyword>clamp</keyword>
		  <keyword>zeroclamp</keyword>
		  <keyword>alphazeroclamp</keyword>
		  <keyword>forceopaque</keyword>
		  <keyword>twosided</keyword>
		  <keyword>backsided</keyword>
		  <keyword>mirror</keyword>
		  <keyword>nofog</keyword>
		  <keyword>unsmoothedTangents</keyword>
		  <keyword>guisurf</keyword>
		  <keyword>sort</keyword>
		  <keyword>decal</keyword>
		  <keyword>reflect</keyword>
		  <keyword>spectrum</keyword>
		  <keyword>deform</keyword>
		  <keyword>decalInfo</keyword>
		  <keyword>renderbump</keyword>
		  <keyword>DECAL_MACRO</keyword>
		  <keyword>sprite</keyword>
		  <keyword>tube</keyword>
		  <keyword>flare</keyword>
		  <keyword>expand</keyword>
		  <keyword>move</keyword>
		  <keyword>turbulent</keyword>
		  <keyword>eyeBall</keyword>
		  <keyword>particle</keyword>
		  <keyword>particle2</keyword>
		  <keyword>noportalfog</keyword>
		  <keyword>fogLight</keyword>
		  <keyword>blendLight</keyword>
		  <keyword>ambientLight</keyword>
		  <keyword>lightFallOffImage</keyword>
		  <keyword>solid</keyword>
		  <keyword>water</keyword>
		  <keyword>playerclip</keyword>
		  <keyword>monsterclip</keyword>
		  <keyword>moveableclip</keyword>
		  <keyword>ikclip</keyword>
		  <keyword>blood</keyword>
		  <keyword>trigger</keyword>
		  <keyword>aassolid</keyword>
		  <keyword>aasobstacle</keyword>
		  <keyword>flashlight_trigger</keyword>
		  <keyword>nonsolid</keyword>
		  <keyword>nullNormal</keyword>
		  <keyword>areaPortal</keyword>
		  <keyword>qer_nocarve</keyword>
		  <keyword>discrete</keyword>
		  <keyword>nofragment</keyword>
		  <keyword>slick</keyword>
		  <keyword>collision</keyword>
		  <keyword>noimpact</keyword>
		  <keyword>nodamage</keyword>
		  <keyword>ladder</keyword>
		  <keyword>nosteps</keyword>
		  <keyword>metal</keyword>
		  <keyword>stone</keyword>
		  <keyword>flesh</keyword>
		  <keyword>wood</keyword>
		  <keyword>cardboard</keyword>
		  <keyword>liquid</keyword>
		  <keyword>glass</keyword>
		  <keyword>plastic</keyword>
		  <keyword>ricochet</keyword>
		  <keyword>surfType10</keyword>
		  <keyword>surfType11</keyword>
		  <keyword>surfType12</keyword>
		  <keyword>surfType13</keyword>
		  <keyword>surfType14</keyword>
		  <keyword>surfType15</keyword>
		  <keyword>blend</keyword>
		  <keyword>add</keyword>
		  <keyword>filter</keyword>
		  <keyword>modulate</keyword>
		  <keyword>none</keyword>
		  <keyword>gl_src_alpha</keyword>
		  <keyword>gl_one_minus_src_alpha</keyword>
		  <keyword>gl_one</keyword>
		  <keyword>gl_dst_color</keyword>
		  <keyword>gl_zero</keyword>
		  <keyword>gl_one_minus_dst_color</keyword>
		  <keyword>gl_dst_alpha</keyword>
		  <keyword>gl_one_minus_dst_alpha</keyword>
		  <keyword>gl_src_alpha_saturate</keyword>
		  <keyword>gl_src_color</keyword>
		  <keyword>gl_one_minus_src_color</keyword>
		  <keyword>remoteRenderMap</keyword>
		  <keyword>mirrorRenderMap</keyword>
		  <keyword>videomap</keyword>
		  <keyword>soundmap</keyword>
		  <keyword>cubemap</keyword>
		  <keyword>cameracubemap</keyword>
		  <keyword>ignorealphatest</keyword>
		  <keyword>nearest</keyword>
		  <keyword>linear</keyword>
		  <keyword>noclamp</keyword>
		  <keyword>uncompressed</keyword>
		  <keyword>highQuality</keyword>
		  <keyword>forceHighQuality</keyword>
		  <keyword>nopicmip</keyword>
		  <keyword>vertexColor</keyword>
		  <keyword>inverseVertexColor</keyword>
		  <keyword>privatePolygonOffset</keyword>
		  <keyword>texGen</keyword>
		  <keyword>scroll</keyword>
		  <keyword>translate</keyword>
		  <keyword>scale</keyword>
		  <keyword>centerScale</keyword>
		  <keyword>shear</keyword>
		  <keyword>rotate</keyword>
		  <keyword>maskRed</keyword>
		  <keyword>maskGreen</keyword>
		  <keyword>maskBlue</keyword>
		  <keyword>maskAlpha</keyword>
		  <keyword>maskColor</keyword>
		  <keyword>maskDepth</keyword>
		  <keyword>alphatest</keyword>
		  <keyword>red</keyword>
		  <keyword>green</keyword>
		  <keyword>blue</keyword>
		  <keyword>alpha</keyword>
		  <keyword>rgb</keyword>
		  <keyword>rgba</keyword>
		  <keyword>color</keyword>
		  <keyword>colored</keyword>
		  <keyword>fragmentProgram</keyword>
		  <keyword>vertexProgram</keyword>
		  <keyword>program</keyword>
		  <keyword>vertexParm</keyword>
		  <keyword>fragmentMap</keyword>
		  <keyword>megatexture</keyword>
        </context>

        <context id="builtin-constants" style-ref="builtin-constant">
          <keyword>_white</keyword>
          <keyword>_flat</keyword>
          <keyword>_black</keyword>
        </context>

        <context id="builtin-objects" style-ref="builtin-object">
          <prefix>(?&lt;![\w\.])</prefix>
          <keyword>WindowsError</keyword>
          <keyword>FutureWarning</keyword>
        </context>

        <context id="builtin-function" style-ref="builtin-function">
          <prefix>(?&lt;![\w\.])</prefix>
          <keyword>heightmap</keyword>
          <keyword>addnormals</keyword>
          <keyword>smoothnormals</keyword>
          <keyword>add</keyword>
          <keyword>scale</keyword>
          <keyword>invertAlpha</keyword>
          <keyword>invertColor</keyword>
          <keyword>makeIntensity</keyword>
          <keyword>makeAlpha</keyword>
        </context>
      </include>
    </context>
  </definitions>
</language>
